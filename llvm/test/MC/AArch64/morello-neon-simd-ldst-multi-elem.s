// RUN: llvm-mc -triple=arm64 -mattr=+neon,+c64 -show-encoding < %s | FileCheck %s
// RUN: llvm-mc -triple=arm64 -mattr=+neon,+c64,+morello -show-encoding < %s | FileCheck %s

// Check that the assembler can handle the documented syntax for AArch64

//------------------------------------------------------------------------------
// Store multiple 1-element structures from one register
//------------------------------------------------------------------------------
         st1 { v0.16b }, [c0]
         st1 { v15.8h }, [c25]
         st1 { v31.4s }, [csp]
         st1 { v0.2d }, [c0]
         st1 { v0.8b }, [c0]
         st1 { v15.4h }, [c25]
         st1 { v31.2s }, [csp]
         st1 { v0.1d }, [c0]
// CHECK:	st1	{ v0.16b }, [c0]          // encoding: [0x00,0x70,0x00,0x4c]
// CHECK:	st1	{ v15.8h }, [c25]         // encoding: [0x2f,0x77,0x00,0x4c]
// CHECK:	st1	{ v31.4s }, [csp]          // encoding: [0xff,0x7b,0x00,0x4c]
// CHECK:	st1	{ v0.2d }, [c0]           // encoding: [0x00,0x7c,0x00,0x4c]
// CHECK:	st1	{ v0.8b }, [c0]           // encoding: [0x00,0x70,0x00,0x0c]
// CHECK:	st1	{ v15.4h }, [c25]         // encoding: [0x2f,0x77,0x00,0x0c]
// CHECK:	st1	{ v31.2s }, [csp]          // encoding: [0xff,0x7b,0x00,0x0c]
// CHECK:	st1	{ v0.1d }, [c0]           // encoding: [0x00,0x7c,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 1-element structures from two consecutive registers
//------------------------------------------------------------------------------
         st1 { v0.16b, v1.16b }, [c0]
         st1 { v15.8h, v16.8h }, [c25]
         st1 { v31.4s, v0.4s }, [csp]
         st1 { v0.2d, v1.2d }, [c0]
         st1 { v0.8b, v1.8b }, [c0]
         st1 { v15.4h, v16.4h }, [c25]
         st1 { v31.2s, v0.2s }, [csp]
         st1 { v0.1d, v1.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0xa0,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0xa7,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0xab,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0xac,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0xa0,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0xa7,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0xab,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d }, [c0]    // encoding: [0x00,0xac,0x00,0x0c]

         st1 { v0.16b-v1.16b }, [c0]
         st1 { v15.8h-v16.8h }, [c25]
         st1 { v31.4s-v0.4s }, [csp]
         st1 { v0.2d-v1.2d }, [c0]
         st1 { v0.8b-v1.8b }, [c0]
         st1 { v15.4h-v16.4h }, [c25]
         st1 { v31.2s-v0.2s }, [csp]
         st1 { v0.1d-v1.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0xa0,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0xa7,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0xab,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0xac,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0xa0,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0xa7,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0xab,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d }, [c0]    // encoding: [0x00,0xac,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 1-element structures from three consecutive registers
//------------------------------------------------------------------------------
         st1 { v0.16b, v1.16b, v2.16b }, [c0]
         st1 { v15.8h, v16.8h, v17.8h }, [c25]
         st1 { v31.4s, v0.4s, v1.4s }, [csp]
         st1 { v0.2d, v1.2d, v2.2d }, [c0]
         st1 { v0.8b, v1.8b, v2.8b }, [c0]
         st1 { v15.4h, v16.4h, v17.4h }, [c25]
         st1 { v31.2s, v0.2s, v1.2s }, [csp]
         st1 { v0.1d, v1.1d, v2.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x60,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x67,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x6b,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x6c,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x60,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x67,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x6b,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d, v2.1d }, [c0] // encoding: [0x00,0x6c,0x00,0x0c]

         st1 { v0.16b-v2.16b }, [c0]
         st1 { v15.8h-v17.8h }, [c25]
         st1 { v31.4s-v1.4s }, [csp]
         st1 { v0.2d-v2.2d }, [c0]
         st1 { v0.8b-v2.8b }, [c0]
         st1 { v15.4h-v17.4h }, [c25]
         st1 { v31.2s-v1.2s }, [csp]
         st1 { v0.1d-v2.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x60,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x67,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x6b,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x6c,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x60,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x67,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x6b,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d, v2.1d }, [c0] // encoding: [0x00,0x6c,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 1-element structures from four consecutive registers
//------------------------------------------------------------------------------
         st1 { v0.16b, v1.16b, v2.16b, v3.16b }, [c0]
         st1 { v15.8h, v16.8h, v17.8h, v18.8h }, [c25]
         st1 { v31.4s, v0.4s, v1.4s, v2.4s }, [csp]
         st1 { v0.2d, v1.2d, v2.2d, v3.2d }, [c0]
         st1 { v0.8b, v1.8b, v2.8b, v3.8b }, [c0]
         st1 { v15.4h, v16.4h, v17.4h, v18.4h }, [c25]
         st1 { v31.2s, v0.2s, v1.2s, v2.2s }, [csp]
         st1 { v0.1d, v1.1d, v2.1d, v3.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x20,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x27,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x2b,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x2c,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x20,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x27,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x2b,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d, v2.1d, v3.1d }, [c0] // encoding: [0x00,0x2c,0x00,0x0c]

         st1 { v0.16b-v3.16b }, [c0]
         st1 { v15.8h-v18.8h }, [c25]
         st1 { v31.4s-v2.4s }, [csp]
         st1 { v0.2d-v3.2d }, [c0]
         st1 { v0.8b-v3.8b }, [c0]
         st1 { v15.4h-v18.4h }, [c25]
         st1 { v31.2s-v2.2s }, [csp]
         st1 { v0.1d-v3.1d }, [c0]
// CHECK:	st1	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x20,0x00,0x4c]
// CHECK:	st1	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x27,0x00,0x4c]
// CHECK:	st1	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x2b,0x00,0x4c]
// CHECK:	st1	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x2c,0x00,0x4c]
// CHECK:	st1	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x20,0x00,0x0c]
// CHECK:	st1	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x27,0x00,0x0c]
// CHECK:	st1	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x2b,0x00,0x0c]
// CHECK:	st1	{ v0.1d, v1.1d, v2.1d, v3.1d }, [c0] // encoding: [0x00,0x2c,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 2-element structures from two consecutive registers
//------------------------------------------------------------------------------
         st2 { v0.16b, v1.16b }, [c0]
         st2 { v15.8h, v16.8h }, [c25]
         st2 { v31.4s, v0.4s }, [csp]
         st2 { v0.2d, v1.2d }, [c0]
         st2 { v0.8b, v1.8b }, [c0]
         st2 { v15.4h, v16.4h }, [c25]
         st2 { v31.2s, v0.2s }, [csp]
// CHECK:	st2	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0x80,0x00,0x4c]
// CHECK:	st2	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0x87,0x00,0x4c]
// CHECK:	st2	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0x8b,0x00,0x4c]
// CHECK:	st2	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0x8c,0x00,0x4c]
// CHECK:	st2	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0x80,0x00,0x0c]
// CHECK:	st2	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0x87,0x00,0x0c]
// CHECK:	st2	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0x8b,0x00,0x0c]

         st2 { v0.16b-v1.16b }, [c0]
         st2 { v15.8h-v16.8h }, [c25]
         st2 { v31.4s-v0.4s }, [csp]
         st2 { v0.2d-v1.2d }, [c0]
         st2 { v0.8b-v1.8b }, [c0]
         st2 { v15.4h-v16.4h }, [c25]
         st2 { v31.2s-v0.2s }, [csp]
// CHECK:	st2	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0x80,0x00,0x4c]
// CHECK:	st2	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0x87,0x00,0x4c]
// CHECK:	st2	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0x8b,0x00,0x4c]
// CHECK:	st2	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0x8c,0x00,0x4c]
// CHECK:	st2	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0x80,0x00,0x0c]
// CHECK:	st2	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0x87,0x00,0x0c]
// CHECK:	st2	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0x8b,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 3-element structures from three consecutive registers
//------------------------------------------------------------------------------
         st3 { v0.16b, v1.16b, v2.16b }, [c0]
         st3 { v15.8h, v16.8h, v17.8h }, [c25]
         st3 { v31.4s, v0.4s, v1.4s }, [csp]
         st3 { v0.2d, v1.2d, v2.2d }, [c0]
         st3 { v0.8b, v1.8b, v2.8b }, [c0]
         st3 { v15.4h, v16.4h, v17.4h }, [c25]
         st3 { v31.2s, v0.2s, v1.2s }, [csp]
// CHECK:	st3	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x40,0x00,0x4c]
// CHECK:	st3	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x47,0x00,0x4c]
// CHECK:	st3	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x4b,0x00,0x4c]
// CHECK:	st3	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x4c,0x00,0x4c]
// CHECK:	st3	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x40,0x00,0x0c]
// CHECK:	st3	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x47,0x00,0x0c]
// CHECK:	st3	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x4b,0x00,0x0c]

         st3 { v0.16b-v2.16b }, [c0]
         st3 { v15.8h-v17.8h }, [c25]
         st3 { v31.4s-v1.4s }, [csp]
         st3 { v0.2d-v2.2d }, [c0]
         st3 { v0.8b-v2.8b }, [c0]
         st3 { v15.4h-v17.4h }, [c25]
         st3 { v31.2s-v1.2s }, [csp]
// CHECK:	st3	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x40,0x00,0x4c]
// CHECK:	st3	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x47,0x00,0x4c]
// CHECK:	st3	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x4b,0x00,0x4c]
// CHECK:	st3	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x4c,0x00,0x4c]
// CHECK:	st3	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x40,0x00,0x0c]
// CHECK:	st3	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x47,0x00,0x0c]
// CHECK:	st3	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x4b,0x00,0x0c]

//------------------------------------------------------------------------------
// Store multiple 4-element structures from four consecutive registers
//------------------------------------------------------------------------------
         st4 { v0.16b, v1.16b, v2.16b, v3.16b }, [c0]
         st4 { v15.8h, v16.8h, v17.8h, v18.8h }, [c25]
         st4 { v31.4s, v0.4s, v1.4s, v2.4s }, [csp]
         st4 { v0.2d, v1.2d, v2.2d, v3.2d }, [c0]
         st4 { v0.8b, v1.8b, v2.8b, v3.8b }, [c0]
         st4 { v15.4h, v16.4h, v17.4h, v18.4h }, [c25]
         st4 { v31.2s, v0.2s, v1.2s, v2.2s }, [csp]
// CHECK:	st4	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x00,0x00,0x4c]
// CHECK:	st4	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x07,0x00,0x4c]
// CHECK:	st4	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x0b,0x00,0x4c]
// CHECK:	st4	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x0c,0x00,0x4c]
// CHECK:	st4	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x00,0x00,0x0c]
// CHECK:	st4	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x07,0x00,0x0c]
// CHECK:	st4	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x0b,0x00,0x0c]

         st4 { v0.16b-v3.16b }, [c0]
         st4 { v15.8h-v18.8h }, [c25]
         st4 { v31.4s-v2.4s }, [csp]
         st4 { v0.2d-v3.2d }, [c0]
         st4 { v0.8b-v3.8b }, [c0]
         st4 { v15.4h-v18.4h }, [c25]
         st4 { v31.2s-v2.2s }, [csp]
// CHECK:	st4	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x00,0x00,0x4c]
// CHECK:	st4	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x07,0x00,0x4c]
// CHECK:	st4	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x0b,0x00,0x4c]
// CHECK:	st4	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x0c,0x00,0x4c]
// CHECK:	st4	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x00,0x00,0x0c]
// CHECK:	st4	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x07,0x00,0x0c]
// CHECK:	st4	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x0b,0x00,0x0c]

//------------------------------------------------------------------------------
// Load multiple 1-element structures to one register
//------------------------------------------------------------------------------
         ld1 { v0.16b }, [c0]
         ld1 { v15.8h }, [c25]
         ld1 { v31.4s }, [csp]
         ld1 { v0.2d }, [c0]
         ld1 { v0.8b }, [c0]
         ld1 { v15.4h }, [c25]
         ld1 { v31.2s }, [csp]
         ld1 { v0.1d }, [c0]
// CHECK:	ld1	{ v0.16b }, [c0]          // encoding: [0x00,0x70,0x40,0x4c]
// CHECK:	ld1	{ v15.8h }, [c25]         // encoding: [0x2f,0x77,0x40,0x4c]
// CHECK:	ld1	{ v31.4s }, [csp]          // encoding: [0xff,0x7b,0x40,0x4c]
// CHECK:	ld1	{ v0.2d }, [c0]           // encoding: [0x00,0x7c,0x40,0x4c]
// CHECK:	ld1	{ v0.8b }, [c0]           // encoding: [0x00,0x70,0x40,0x0c]
// CHECK:	ld1	{ v15.4h }, [c25]         // encoding: [0x2f,0x77,0x40,0x0c]
// CHECK:	ld1	{ v31.2s }, [csp]          // encoding: [0xff,0x7b,0x40,0x0c]
// CHECK:	ld1	{ v0.1d }, [c0]           // encoding: [0x00,0x7c,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 1-element structures to two consecutive registers
//------------------------------------------------------------------------------
         ld1 { v0.16b, v1.16b }, [c0]
         ld1 { v15.8h, v16.8h }, [c25]
         ld1 { v31.4s, v0.4s }, [csp]
         ld1 { v0.2d, v1.2d }, [c0]
         ld1 { v0.8b, v1.8b }, [c0]
         ld1 { v15.4h, v16.4h }, [c25]
         ld1 { v31.2s, v0.2s }, [csp]
         ld1 { v0.1d, v1.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0xa0,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0xa7,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0xab,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0xac,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0xa0,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0xa7,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0xab,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d }, [c0]    // encoding: [0x00,0xac,0x40,0x0c]

         ld1 { v0.16b-v1.16b }, [c0]
         ld1 { v15.8h-v16.8h }, [c25]
         ld1 { v31.4s-v0.4s }, [csp]
         ld1 { v0.2d-v1.2d }, [c0]
         ld1 { v0.8b-v1.8b }, [c0]
         ld1 { v15.4h-v16.4h }, [c25]
         ld1 { v31.2s-v0.2s }, [csp]
         ld1 { v0.1d-v1.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0xa0,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0xa7,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0xab,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0xac,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0xa0,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0xa7,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0xab,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d }, [c0]    // encoding: [0x00,0xac,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 1-element structures to three consecutive registers
//------------------------------------------------------------------------------
         ld1 { v0.16b, v1.16b, v2.16b }, [c0]
         ld1 { v15.8h, v16.8h, v17.8h }, [c25]
         ld1 { v31.4s, v0.4s, v1.4s }, [csp]
         ld1 { v0.2d, v1.2d, v2.2d }, [c0]
         ld1 { v0.8b, v1.8b, v2.8b }, [c0]
         ld1 { v15.4h, v16.4h, v17.4h }, [c25]
         ld1 { v31.2s, v0.2s, v1.2s }, [csp]
         ld1 { v0.1d, v1.1d, v2.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x60,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x67,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x6b,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x6c,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x60,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x67,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x6b,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d, v2.1d }, [c0] // encoding: [0x00,0x6c,0x40,0x0c]

         ld1 { v0.16b-v2.16b }, [c0]
         ld1 { v15.8h-v17.8h }, [c25]
         ld1 { v31.4s-v1.4s }, [csp]
         ld1 { v0.2d-v2.2d }, [c0]
         ld1 { v0.8b-v2.8b }, [c0]
         ld1 { v15.4h-v17.4h }, [c25]
         ld1 { v31.2s-v1.2s }, [csp]
         ld1 { v0.1d-v2.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x60,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x67,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x6b,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x6c,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x60,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x67,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x6b,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d, v2.1d }, [c0] // encoding: [0x00,0x6c,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 1-element structures to four consecutive registers
//------------------------------------------------------------------------------
         ld1 { v0.16b, v1.16b, v2.16b, v3.16b }, [c0]
         ld1 { v15.8h, v16.8h, v17.8h, v18.8h }, [c25]
         ld1 { v31.4s, v0.4s, v1.4s, v2.4s }, [csp]
         ld1 { v0.2d, v1.2d, v2.2d, v3.2d }, [c0]
         ld1 { v0.8b, v1.8b, v2.8b, v3.8b }, [c0]
         ld1 { v15.4h, v16.4h, v17.4h, v18.4h }, [c25]
         ld1 { v31.2s, v0.2s, v1.2s, v2.2s }, [csp]
         ld1 { v0.1d, v1.1d, v2.1d, v3.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x20,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x27,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x2b,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x2c,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x20,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x27,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x2b,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d, v2.1d, v3.1d }, [c0] // encoding: [0x00,0x2c,0x40,0x0c]

         ld1 { v0.16b-v3.16b }, [c0]
         ld1 { v15.8h-v18.8h }, [c25]
         ld1 { v31.4s-v2.4s }, [csp]
         ld1 { v0.2d-v3.2d }, [c0]
         ld1 { v0.8b-v3.8b }, [c0]
         ld1 { v15.4h-v18.4h }, [c25]
         ld1 { v31.2s-v2.2s }, [csp]
         ld1 { v0.1d-v3.1d }, [c0]
// CHECK:	ld1	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x20,0x40,0x4c]
// CHECK:	ld1	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x27,0x40,0x4c]
// CHECK:	ld1	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x2b,0x40,0x4c]
// CHECK:	ld1	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x2c,0x40,0x4c]
// CHECK:	ld1	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x20,0x40,0x0c]
// CHECK:	ld1	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x27,0x40,0x0c]
// CHECK:	ld1	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x2b,0x40,0x0c]
// CHECK:	ld1	{ v0.1d, v1.1d, v2.1d, v3.1d }, [c0] // encoding: [0x00,0x2c,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 4-element structures to two consecutive registers
//------------------------------------------------------------------------------
         ld2 { v0.16b, v1.16b }, [c0]
         ld2 { v15.8h, v16.8h }, [c25]
         ld2 { v31.4s, v0.4s }, [csp]
         ld2 { v0.2d, v1.2d }, [c0]
         ld2 { v0.8b, v1.8b }, [c0]
         ld2 { v15.4h, v16.4h }, [c25]
         ld2 { v31.2s, v0.2s }, [csp]
// CHECK:	ld2	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0x80,0x40,0x4c]
// CHECK:	ld2	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0x87,0x40,0x4c]
// CHECK:	ld2	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0x8b,0x40,0x4c]
// CHECK:	ld2	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0x8c,0x40,0x4c]
// CHECK:	ld2	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0x80,0x40,0x0c]
// CHECK:	ld2	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0x87,0x40,0x0c]
// CHECK:	ld2	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0x8b,0x40,0x0c]

         ld2 { v0.16b-v1.16b }, [c0]
         ld2 { v15.8h-v16.8h }, [c25]
         ld2 { v31.4s-v0.4s }, [csp]
         ld2 { v0.2d-v1.2d }, [c0]
         ld2 { v0.8b-v1.8b }, [c0]
         ld2 { v15.4h-v16.4h }, [c25]
         ld2 { v31.2s-v0.2s }, [csp]
// CHECK:	ld2	{ v0.16b, v1.16b }, [c0]  // encoding: [0x00,0x80,0x40,0x4c]
// CHECK:	ld2	{ v15.8h, v16.8h }, [c25] // encoding: [0x2f,0x87,0x40,0x4c]
// CHECK:	ld2	{ v31.4s, v0.4s }, [csp]   // encoding: [0xff,0x8b,0x40,0x4c]
// CHECK:	ld2	{ v0.2d, v1.2d }, [c0]    // encoding: [0x00,0x8c,0x40,0x4c]
// CHECK:	ld2	{ v0.8b, v1.8b }, [c0]    // encoding: [0x00,0x80,0x40,0x0c]
// CHECK:	ld2	{ v15.4h, v16.4h }, [c25] // encoding: [0x2f,0x87,0x40,0x0c]
// CHECK:	ld2	{ v31.2s, v0.2s }, [csp]   // encoding: [0xff,0x8b,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 3-element structures to three consecutive registers
//------------------------------------------------------------------------------
         ld3 { v0.16b, v1.16b, v2.16b }, [c0]
         ld3 { v15.8h, v16.8h, v17.8h }, [c25]
         ld3 { v31.4s, v0.4s, v1.4s }, [csp]
         ld3 { v0.2d, v1.2d, v2.2d }, [c0]
         ld3 { v0.8b, v1.8b, v2.8b }, [c0]
         ld3 { v15.4h, v16.4h, v17.4h }, [c25]
         ld3 { v31.2s, v0.2s, v1.2s }, [csp]
// CHECK:	ld3	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x40,0x40,0x4c]
// CHECK:	ld3	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x47,0x40,0x4c]
// CHECK:	ld3	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x4b,0x40,0x4c]
// CHECK:	ld3	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x4c,0x40,0x4c]
// CHECK:	ld3	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x40,0x40,0x0c]
// CHECK:	ld3	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x47,0x40,0x0c]
// CHECK:	ld3	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x4b,0x40,0x0c]

         ld3 { v0.16b-v2.16b }, [c0]
         ld3 { v15.8h-v17.8h }, [c25]
         ld3 { v31.4s-v1.4s }, [csp]
         ld3 { v0.2d-v2.2d }, [c0]
         ld3 { v0.8b-v2.8b }, [c0]
         ld3 { v15.4h-v17.4h }, [c25]
         ld3 { v31.2s-v1.2s }, [csp]
// CHECK:	ld3	{ v0.16b, v1.16b, v2.16b }, [c0] // encoding: [0x00,0x40,0x40,0x4c]
// CHECK:	ld3	{ v15.8h, v16.8h, v17.8h }, [c25] // encoding: [0x2f,0x47,0x40,0x4c]
// CHECK:	ld3	{ v31.4s, v0.4s, v1.4s }, [csp] // encoding: [0xff,0x4b,0x40,0x4c]
// CHECK:	ld3	{ v0.2d, v1.2d, v2.2d }, [c0] // encoding: [0x00,0x4c,0x40,0x4c]
// CHECK:	ld3	{ v0.8b, v1.8b, v2.8b }, [c0] // encoding: [0x00,0x40,0x40,0x0c]
// CHECK:	ld3	{ v15.4h, v16.4h, v17.4h }, [c25] // encoding: [0x2f,0x47,0x40,0x0c]
// CHECK:	ld3	{ v31.2s, v0.2s, v1.2s }, [csp] // encoding: [0xff,0x4b,0x40,0x0c]

//------------------------------------------------------------------------------
// Load multiple 4-element structures to four consecutive registers
//------------------------------------------------------------------------------
         ld4 { v0.16b, v1.16b, v2.16b, v3.16b }, [c0]
         ld4 { v15.8h, v16.8h, v17.8h, v18.8h }, [c25]
         ld4 { v31.4s, v0.4s, v1.4s, v2.4s }, [csp]
         ld4 { v0.2d, v1.2d, v2.2d, v3.2d }, [c0]
         ld4 { v0.8b, v1.8b, v2.8b, v3.8b }, [c0]
         ld4 { v15.4h, v16.4h, v17.4h, v18.4h }, [c25]
         ld4 { v31.2s, v0.2s, v1.2s, v2.2s }, [csp]
// CHECK:	ld4	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x00,0x40,0x4c]
// CHECK:	ld4	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x07,0x40,0x4c]
// CHECK:	ld4	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x0b,0x40,0x4c]
// CHECK:	ld4	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x0c,0x40,0x4c]
// CHECK:	ld4	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x00,0x40,0x0c]
// CHECK:	ld4	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x07,0x40,0x0c]
// CHECK:	ld4	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x0b,0x40,0x0c]

         ld4 { v0.16b-v3.16b }, [c0]
         ld4 { v15.8h-v18.8h }, [c25]
         ld4 { v31.4s-v2.4s }, [csp]
         ld4 { v0.2d-v3.2d }, [c0]
         ld4 { v0.8b-v3.8b }, [c0]
         ld4 { v15.4h-v18.4h }, [c25]
         ld4 { v31.2s-v2.2s }, [csp]
// CHECK:	ld4	{ v0.16b, v1.16b, v2.16b, v3.16b }, [c0] // encoding: [0x00,0x00,0x40,0x4c]
// CHECK:	ld4	{ v15.8h, v16.8h, v17.8h, v18.8h }, [c25] // encoding: [0x2f,0x07,0x40,0x4c]
// CHECK:	ld4	{ v31.4s, v0.4s, v1.4s, v2.4s }, [csp] // encoding: [0xff,0x0b,0x40,0x4c]
// CHECK:	ld4	{ v0.2d, v1.2d, v2.2d, v3.2d }, [c0] // encoding: [0x00,0x0c,0x40,0x4c]
// CHECK:	ld4	{ v0.8b, v1.8b, v2.8b, v3.8b }, [c0] // encoding: [0x00,0x00,0x40,0x0c]
// CHECK:	ld4	{ v15.4h, v16.4h, v17.4h, v18.4h }, [c25] // encoding: [0x2f,0x07,0x40,0x0c]
// CHECK:	ld4	{ v31.2s, v0.2s, v1.2s, v2.2s }, [csp] // encoding: [0xff,0x0b,0x40,0x0c]

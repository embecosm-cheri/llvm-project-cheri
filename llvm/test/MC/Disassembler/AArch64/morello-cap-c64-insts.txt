# RUN: llvm-mc -triple=arm64 -mattr=+morello,+c64,+v8.2a -show-encoding -disassemble < %s | FileCheck %s -check-prefix=32CAP
# RUN: llvm-mc -triple=arm64 -mattr=+morello,+c64,+use-16-cap-regs,+v8.2a -show-encoding -disassemble < %s |& FileCheck %s -check-prefix=16CAP

  0x11,0x00,0x00,0x10
# 32CAP: adr c17, #0
# 16CAP: invalid instruction encoding

  0x00,0x00,0x00,0x10
# 32CAP: adr c0, #0
# 16CAP: adr c0, #0

  0x31,0x74,0x0b,0xd5
  0x31,0x76,0x08,0xd5
  0x31,0x7b,0x0b,0xd5
  0x31,0x7e,0x0b,0xd5
  0x31,0x7c,0x0b,0xd5
  0x31,0x75,0x0b,0xd5
# 32CAP:  dc zva, c17
# 32CAP:  dc ivac, c17
# 32CAP:  dc cvau, c17
# 32CAP:  dc civac, c17
# 32CAP:  dc cvap, c17
# 32CAP:  ic ivau, c17
# 16CAP:  sys #3, c7, c4, #1, x17
# 16CAP:  sys #0, c7, c6, #1, x17
# 16CAP:  sys #3, c7, c11, #1, x17
# 16CAP:  sys #3, c7, c14, #1, x17
# 16CAP:  sys #3, c7, c12, #1, x17
# 16CAP:  sys #3, c7, c5, #1, x17

  0x20,0x74,0x0b,0xd5
  0x20,0x76,0x08,0xd5
  0x20,0x7b,0x0b,0xd5
  0x20,0x7e,0x0b,0xd5
  0x20,0x7c,0x0b,0xd5
  0x20,0x75,0x0b,0xd5
# 16CAP:  dc zva, c0
# 16CAP:  dc ivac, c0
# 16CAP:  dc cvau, c0
# 16CAP:  dc civac, c0
# 16CAP:  dc cvap, c0
# 16CAP:  ic ivau, c0
# 32CAP:  dc zva, c0
# 32CAP:  dc ivac, c0
# 32CAP:  dc cvau, c0
# 32CAP:  dc civac, c0
# 32CAP:  dc cvap, c0
# 32CAP:  ic ivau, c0

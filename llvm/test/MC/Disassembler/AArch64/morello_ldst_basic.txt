# RUN: llvm-mc -triple=arm64 -mattr=+morello -disassemble < %s | FileCheck %s

  0xf8,0x48,0x6f,0xa2
  0xf8,0x58,0x6f,0xa2
  0x07,0x6b,0x70,0xa2
  0x07,0x7b,0x70,0xa2
  0x9b,0xc8,0x62,0xa2
  0x9b,0xd8,0x62,0xa2
  0x82,0xeb,0x7d,0xa2
  0x82,0xfb,0x7d,0xa2
  0xff,0x6b,0x7f,0xa2
  0xff,0x4b,0x7f,0xa2
# CHECK: ldr c24, [x7, w15, uxtw]
# CHECK: ldr c24, [x7, w15, uxtw #4]
# CHECK: ldr c7, [x24, x16]
# CHECK: ldr c7, [x24, x16, lsl #4]
# CHECK: ldr c27, [x4, w2, sxtw]
# CHECK: ldr c27, [x4, w2, sxtw #4]
# CHECK: ldr c2, [x28, x29, sxtx]
# CHECK: ldr c2, [x28, x29, sxtx #4]
# CHECK: ldr czr, [sp, xzr]
# CHECK: ldr czr, [sp, wzr, uxtw]

  0xf8,0x48,0x2f,0xa2
  0xf8,0x58,0x2f,0xa2
  0x07,0x6b,0x30,0xa2
  0x07,0x7b,0x30,0xa2
  0x9b,0xc8,0x22,0xa2
  0x9b,0xd8,0x22,0xa2
  0x82,0xeb,0x3d,0xa2
  0x82,0xfb,0x3d,0xa2
  0xff,0x6b,0x3f,0xa2
  0xff,0x4b,0x3f,0xa2
# CHECK: str c24, [x7, w15, uxtw]
# CHECK: str c24, [x7, w15, uxtw #4]
# CHECK: str c7, [x24, x16]
# CHECK: str c7, [x24, x16, lsl #4]
# CHECK: str c27, [x4, w2, sxtw]
# CHECK: str c27, [x4, w2, sxtw #4]
# CHECK: str c2, [x28, x29, sxtx]
# CHECK: str c2, [x28, x29, sxtx #4]
# CHECK: str czr, [sp, xzr]
# CHECK: str czr, [sp, wzr, uxtw]

# Load/Store capability (register) via alternate base.
  0x41,0x4c,0xe3,0xc2
  0x41,0x4c,0xe3,0xc2
  0x41,0x5c,0xe3,0xc2
  0x41,0x6c,0xe3,0xc2
  0x41,0x6c,0xe3,0xc2
  0x41,0x7c,0xe3,0xc2
  0x41,0xcc,0xe3,0xc2
  0x41,0xcc,0xe3,0xc2
  0x41,0xdc,0xe3,0xc2
  0x41,0xec,0xe3,0xc2
  0x41,0xec,0xe3,0xc2
  0x41,0xfc,0xe3,0xc2
  0x41,0x44,0xe3,0xc2
  0x41,0x44,0xe3,0xc2
  0x41,0x54,0xe3,0xc2
  0x41,0x64,0xe3,0xc2
  0x41,0x64,0xe3,0xc2
  0x41,0x74,0xe3,0xc2
  0x41,0xc4,0xe3,0xc2
  0x41,0xc4,0xe3,0xc2
  0x41,0xd4,0xe3,0xc2
  0x41,0xe4,0xe3,0xc2
  0x41,0xe4,0xe3,0xc2
  0x41,0xf4,0xe3,0xc2
# CHECK: ldr	c1, [c2, w3, uxtw]
# CHECK: ldr	c1, [c2, w3, uxtw]
# CHECK: ldr	c1, [c2, w3, uxtw #4]
# CHECK: ldr	c1, [c2, x3]
# CHECK: ldr	c1, [c2, x3]
# CHECK: ldr	c1, [c2, x3, lsl #4]
# CHECK: ldr	c1, [c2, w3, sxtw]
# CHECK: ldr	c1, [c2, w3, sxtw]
# CHECK: ldr	c1, [c2, w3, sxtw #4]
# CHECK: ldr	c1, [c2, x3, sxtx]
# CHECK: ldr	c1, [c2, x3, sxtx]
# CHECK: ldr	c1, [c2, x3, sxtx #4]
# CHECK: str	c1, [c2, w3, uxtw]
# CHECK: str	c1, [c2, w3, uxtw]
# CHECK: str	c1, [c2, w3, uxtw #4]
# CHECK: str	c1, [c2, x3]
# CHECK: str	c1, [c2, x3]
# CHECK: str	c1, [c2, x3, lsl #4]
# CHECK: str	c1, [c2, w3, sxtw]
# CHECK: str	c1, [c2, w3, sxtw]
# CHECK: str	c1, [c2, w3, sxtw #4]
# CHECK: str	c1, [c2, x3, sxtx]
# CHECK: str	c1, [c2, x3, sxtx]
# CHECK: str	c1, [c2, x3, sxtx #4]

# Load/Store Register (register) via alternate base.
  0x41,0x40,0xe3,0x82
  0x41,0x40,0xe3,0x82
  0x41,0x50,0xe3,0x82
  0x41,0x60,0xe3,0x82
  0x41,0x60,0xe3,0x82
  0x41,0x70,0xe3,0x82
  0x41,0xc0,0xe3,0x82
  0x41,0xc0,0xe3,0x82
  0x41,0xd0,0xe3,0x82
  0x41,0xe0,0xe3,0x82
  0x41,0xe0,0xe3,0x82
  0x41,0xf0,0xe3,0x82
  0x41,0x44,0xe3,0x82
  0x41,0x44,0xe3,0x82
  0x41,0x54,0xe3,0x82
  0x41,0x64,0xe3,0x82
  0x41,0x64,0xe3,0x82
  0x41,0x74,0xe3,0x82
  0x41,0xc4,0xe3,0x82
  0x41,0xc4,0xe3,0x82
  0x41,0xd4,0xe3,0x82
  0x41,0xe4,0xe3,0x82
  0x41,0xe4,0xe3,0x82
  0x41,0xf4,0xe3,0x82
  0x41,0x40,0xa3,0x82
  0x41,0x40,0xa3,0x82
  0x41,0x50,0xa3,0x82
  0x41,0x60,0xa3,0x82
  0x41,0x60,0xa3,0x82
  0x41,0x70,0xa3,0x82
  0x41,0xc0,0xa3,0x82
  0x41,0xc0,0xa3,0x82
  0x41,0xd0,0xa3,0x82
  0x41,0xe0,0xa3,0x82
  0x41,0xe0,0xa3,0x82
  0x41,0xf0,0xa3,0x82
  0x41,0x44,0xa3,0x82
  0x41,0x44,0xa3,0x82
  0x41,0x54,0xa3,0x82
  0x41,0x64,0xa3,0x82
  0x41,0x64,0xa3,0x82
  0x41,0x74,0xa3,0x82
  0x41,0xc4,0xa3,0x82
  0x41,0xc4,0xa3,0x82
  0x41,0xd4,0xa3,0x82
  0x41,0xe4,0xa3,0x82
  0x41,0xe4,0xa3,0x82
  0x41,0xf4,0xa3,0x82
# CHECK: ldr	w1, [c2, w3, uxtw]
# CHECK: ldr	w1, [c2, w3, uxtw]
# CHECK: ldr	w1, [c2, w3, uxtw #2]
# CHECK: ldr	w1, [c2, x3]
# CHECK: ldr	w1, [c2, x3]
# CHECK: ldr	w1, [c2, x3, lsl #2]
# CHECK: ldr	w1, [c2, w3, sxtw]
# CHECK: ldr	w1, [c2, w3, sxtw]
# CHECK: ldr	w1, [c2, w3, sxtw #2]
# CHECK: ldr	w1, [c2, x3, sxtx]
# CHECK: ldr	w1, [c2, x3, sxtx]
# CHECK: ldr	w1, [c2, x3, sxtx #2]
# CHECK: ldr	x1, [c2, w3, uxtw]
# CHECK: ldr	x1, [c2, w3, uxtw]
# CHECK: ldr	x1, [c2, w3, uxtw #3]
# CHECK: ldr	x1, [c2, x3]
# CHECK: ldr	x1, [c2, x3]
# CHECK: ldr	x1, [c2, x3, lsl #3]
# CHECK: ldr	x1, [c2, w3, sxtw]
# CHECK: ldr	x1, [c2, w3, sxtw]
# CHECK: ldr	x1, [c2, w3, sxtw #3]
# CHECK: ldr	x1, [c2, x3, sxtx]
# CHECK: ldr	x1, [c2, x3, sxtx]
# CHECK: ldr	x1, [c2, x3, sxtx #3]
# CHECK: str	w1, [c2, w3, uxtw]
# CHECK: str	w1, [c2, w3, uxtw]
# CHECK: str	w1, [c2, w3, uxtw #2]
# CHECK: str	w1, [c2, x3]
# CHECK: str	w1, [c2, x3]
# CHECK: str	w1, [c2, x3, lsl #2]
# CHECK: str	w1, [c2, w3, sxtw]
# CHECK: str	w1, [c2, w3, sxtw]
# CHECK: str	w1, [c2, w3, sxtw #2]
# CHECK: str	w1, [c2, x3, sxtx]
# CHECK: str	w1, [c2, x3, sxtx]
# CHECK: str	w1, [c2, x3, sxtx #2]
# CHECK: str	x1, [c2, w3, uxtw]
# CHECK: str	x1, [c2, w3, uxtw]
# CHECK: str	x1, [c2, w3, uxtw #3]
# CHECK: str	x1, [c2, x3]
# CHECK: str	x1, [c2, x3]
# CHECK: str	x1, [c2, x3, lsl #3]
# CHECK: str	x1, [c2, w3, sxtw]
# CHECK: str	x1, [c2, w3, sxtw]
# CHECK: str	x1, [c2, w3, sxtw #3]
# CHECK: str	x1, [c2, x3, sxtx]
# CHECK: str	x1, [c2, x3, sxtx]
# CHECK: str	x1, [c2, x3, sxtx #3]

# Load/Store Register Byte (register) via alternate base.
  0x41,0x40,0xc3,0x82
  0x41,0x50,0xc3,0x82
  0x41,0x60,0xc3,0x82
  0x41,0x70,0xc3,0x82
  0x41,0xc0,0xc3,0x82
  0x41,0xd0,0xc3,0x82
  0x41,0xe0,0xc3,0x82
  0x41,0xf0,0xc3,0x82
  0x41,0x40,0x83,0x82
  0x41,0x50,0x83,0x82
  0x41,0x60,0x83,0x82
  0x41,0x70,0x83,0x82
  0x41,0xc0,0x83,0x82
  0x41,0xd0,0x83,0x82
  0x41,0xe0,0x83,0x82
  0x41,0xf0,0x83,0x82
# CHECK: ldrb	w1, [c2, w3, uxtw]
# CHECK: ldrb	w1, [c2, w3, uxtw #0]
# CHECK: ldrb	w1, [c2, x3]
# CHECK: ldrb	w1, [c2, x3, lsl #0]
# CHECK: ldrb	w1, [c2, w3, sxtw]
# CHECK: ldrb	w1, [c2, w3, sxtw #0]
# CHECK: ldrb	w1, [c2, x3, sxtx]
# CHECK: ldrb	w1, [c2, x3, sxtx #0]
# CHECK: strb	w1, [c2, w3, uxtw]
# CHECK: strb	w1, [c2, w3, uxtw #0]
# CHECK: strb	w1, [c2, x3]
# CHECK: strb	w1, [c2, x3, lsl #0]
# CHECK: strb	w1, [c2, w3, sxtw]
# CHECK: strb	w1, [c2, w3, sxtw #0]
# CHECK: strb	w1, [c2, x3, sxtx]
# CHECK: strb	w1, [c2, x3, sxtx #0]

# Load/Store Register Halfword (register) via alternate base.
  0x41,0x4c,0xc3,0x82
  0x41,0x4c,0xc3,0x82
  0x41,0x5c,0xc3,0x82
  0x41,0x6c,0xc3,0x82
  0x41,0x6c,0xc3,0x82
  0x41,0x7c,0xc3,0x82
  0x41,0xcc,0xc3,0x82
  0x41,0xcc,0xc3,0x82
  0x41,0xdc,0xc3,0x82
  0x41,0xec,0xc3,0x82
  0x41,0xec,0xc3,0x82
  0x41,0xfc,0xc3,0x82
  0x41,0x4c,0x83,0x82
  0x41,0x4c,0x83,0x82
  0x41,0x5c,0x83,0x82
  0x41,0x6c,0x83,0x82
  0x41,0x6c,0x83,0x82
  0x41,0x7c,0x83,0x82
  0x41,0xcc,0x83,0x82
  0x41,0xcc,0x83,0x82
  0x41,0xdc,0x83,0x82
  0x41,0xec,0x83,0x82
  0x41,0xec,0x83,0x82
  0x41,0xfc,0x83,0x82
# CHECK: ldrh	w1, [c2, w3, uxtw]
# CHECK: ldrh	w1, [c2, w3, uxtw]
# CHECK: ldrh	w1, [c2, w3, uxtw #1]
# CHECK: ldrh	w1, [c2, x3]
# CHECK: ldrh	w1, [c2, x3]
# CHECK: ldrh	w1, [c2, x3, lsl #1]
# CHECK: ldrh	w1, [c2, w3, sxtw]
# CHECK: ldrh	w1, [c2, w3, sxtw]
# CHECK: ldrh	w1, [c2, w3, sxtw #1]
# CHECK: ldrh	w1, [c2, x3, sxtx]
# CHECK: ldrh	w1, [c2, x3, sxtx]
# CHECK: ldrh	w1, [c2, x3, sxtx #1]
# CHECK: strh	w1, [c2, w3, uxtw]
# CHECK: strh	w1, [c2, w3, uxtw]
# CHECK: strh	w1, [c2, w3, uxtw #1]
# CHECK: strh	w1, [c2, x3]
# CHECK: strh	w1, [c2, x3]
# CHECK: strh	w1, [c2, x3, lsl #1]
# CHECK: strh	w1, [c2, w3, sxtw]
# CHECK: strh	w1, [c2, w3, sxtw]
# CHECK: strh	w1, [c2, w3, sxtw #1]
# CHECK: strh	w1, [c2, x3, sxtx]
# CHECK: strh	w1, [c2, x3, sxtx]
# CHECK: strh	w1, [c2, x3, sxtx #1]

# Load Register Signed Byte (register) via alternate base.
  0x41,0x44,0xc3,0x82
  0x41,0x54,0xc3,0x82
  0x41,0x64,0xc3,0x82
  0x41,0x74,0xc3,0x82
  0x41,0xc4,0xc3,0x82
  0x41,0xd4,0xc3,0x82
  0x41,0xe4,0xc3,0x82
  0x41,0xf4,0xc3,0x82
  0x41,0x44,0x83,0x82
  0x41,0x54,0x83,0x82
  0x41,0x64,0x83,0x82
  0x41,0x74,0x83,0x82
  0x41,0xc4,0x83,0x82
  0x41,0xd4,0x83,0x82
  0x41,0xe4,0x83,0x82
  0x41,0xf4,0x83,0x82
# CHECK: ldrsb	w1, [c2, w3, uxtw]
# CHECK: ldrsb	w1, [c2, w3, uxtw #0]
# CHECK: ldrsb	w1, [c2, x3]
# CHECK: ldrsb	w1, [c2, x3, lsl #0]
# CHECK: ldrsb	w1, [c2, w3, sxtw]
# CHECK: ldrsb	w1, [c2, w3, sxtw #0]
# CHECK: ldrsb	w1, [c2, x3, sxtx]
# CHECK: ldrsb	w1, [c2, x3, sxtx #0]
# CHECK: ldrsb	x1, [c2, w3, uxtw]
# CHECK: ldrsb	x1, [c2, w3, uxtw #0]
# CHECK: ldrsb	x1, [c2, x3]
# CHECK: ldrsb	x1, [c2, x3, lsl #0]
# CHECK: ldrsb	x1, [c2, w3, sxtw]
# CHECK: ldrsb	x1, [c2, w3, sxtw #0]
# CHECK: ldrsb	x1, [c2, x3, sxtx]
# CHECK: ldrsb	x1, [c2, x3, sxtx #0]

# Load Register Signed Halfword (register) via alternate base.
  0x41,0x48,0xc3,0x82
  0x41,0x48,0xc3,0x82
  0x41,0x58,0xc3,0x82
  0x41,0x68,0xc3,0x82
  0x41,0x68,0xc3,0x82
  0x41,0x78,0xc3,0x82
  0x41,0xc8,0xc3,0x82
  0x41,0xc8,0xc3,0x82
  0x41,0xd8,0xc3,0x82
  0x41,0xe8,0xc3,0x82
  0x41,0xe8,0xc3,0x82
  0x41,0xf8,0xc3,0x82
  0x41,0x48,0x83,0x82
  0x41,0x48,0x83,0x82
  0x41,0x58,0x83,0x82
  0x41,0x68,0x83,0x82
  0x41,0x68,0x83,0x82
  0x41,0x78,0x83,0x82
  0x41,0xc8,0x83,0x82
  0x41,0xc8,0x83,0x82
  0x41,0xd8,0x83,0x82
  0x41,0xe8,0x83,0x82
  0x41,0xe8,0x83,0x82
  0x41,0xf8,0x83,0x82
# CHECK: ldrsh	w1, [c2, w3, uxtw]
# CHECK: ldrsh	w1, [c2, w3, uxtw]
# CHECK: ldrsh	w1, [c2, w3, uxtw #1]
# CHECK: ldrsh	w1, [c2, x3]
# CHECK: ldrsh	w1, [c2, x3]
# CHECK: ldrsh	w1, [c2, x3, lsl #1]
# CHECK: ldrsh	w1, [c2, w3, sxtw]
# CHECK: ldrsh	w1, [c2, w3, sxtw]
# CHECK: ldrsh	w1, [c2, w3, sxtw #1]
# CHECK: ldrsh	w1, [c2, x3, sxtx]
# CHECK: ldrsh	w1, [c2, x3, sxtx]
# CHECK: ldrsh	w1, [c2, x3, sxtx #1]
# CHECK: ldrsh	x1, [c2, w3, uxtw]
# CHECK: ldrsh	x1, [c2, w3, uxtw]
# CHECK: ldrsh	x1, [c2, w3, uxtw #1]
# CHECK: ldrsh	x1, [c2, x3]
# CHECK: ldrsh	x1, [c2, x3]
# CHECK: ldrsh	x1, [c2, x3, lsl #1]
# CHECK: ldrsh	x1, [c2, w3, sxtw]
# CHECK: ldrsh	x1, [c2, w3, sxtw]
# CHECK: ldrsh	x1, [c2, w3, sxtw #1]
# CHECK: ldrsh	x1, [c2, x3, sxtx]
# CHECK: ldrsh	x1, [c2, x3, sxtx]
# CHECK: ldrsh	x1, [c2, x3, sxtx #1]

# Load/Store SIMD&FP Register (register) via alternate base.
  0x41,0x48,0xe3,0x82
  0x41,0x48,0xe3,0x82
  0x41,0x58,0xe3,0x82
  0x41,0x68,0xe3,0x82
  0x41,0x68,0xe3,0x82
  0x41,0x78,0xe3,0x82
  0x41,0xc8,0xe3,0x82
  0x41,0xc8,0xe3,0x82
  0x41,0xd8,0xe3,0x82
  0x41,0xe8,0xe3,0x82
  0x41,0xe8,0xe3,0x82
  0x41,0xf8,0xe3,0x82
  0x41,0x4c,0xe3,0x82
  0x41,0x4c,0xe3,0x82
  0x41,0x5c,0xe3,0x82
  0x41,0x6c,0xe3,0x82
  0x41,0x6c,0xe3,0x82
  0x41,0x7c,0xe3,0x82
  0x41,0xcc,0xe3,0x82
  0x41,0xcc,0xe3,0x82
  0x41,0xdc,0xe3,0x82
  0x41,0xec,0xe3,0x82
  0x41,0xec,0xe3,0x82
  0x41,0xfc,0xe3,0x82
  0x41,0x48,0xa3,0x82
  0x41,0x48,0xa3,0x82
  0x41,0x58,0xa3,0x82
  0x41,0x68,0xa3,0x82
  0x41,0x68,0xa3,0x82
  0x41,0x78,0xa3,0x82
  0x41,0xc8,0xa3,0x82
  0x41,0xc8,0xa3,0x82
  0x41,0xd8,0xa3,0x82
  0x41,0xe8,0xa3,0x82
  0x41,0xe8,0xa3,0x82
  0x41,0xf8,0xa3,0x82
  0x41,0x4c,0xa3,0x82
  0x41,0x4c,0xa3,0x82
  0x41,0x5c,0xa3,0x82
  0x41,0x6c,0xa3,0x82
  0x41,0x6c,0xa3,0x82
  0x41,0x7c,0xa3,0x82
  0x41,0xcc,0xa3,0x82
  0x41,0xcc,0xa3,0x82
  0x41,0xdc,0xa3,0x82
  0x41,0xec,0xa3,0x82
  0x41,0xec,0xa3,0x82
  0x41,0xfc,0xa3,0x82
# CHECK: ldr	d1, [c2, w3, uxtw]
# CHECK: ldr	d1, [c2, w3, uxtw]
# CHECK: ldr	d1, [c2, w3, uxtw #3]
# CHECK: ldr	d1, [c2, x3]
# CHECK: ldr	d1, [c2, x3]
# CHECK: ldr	d1, [c2, x3, lsl #3]
# CHECK: ldr	d1, [c2, w3, sxtw]
# CHECK: ldr	d1, [c2, w3, sxtw]
# CHECK: ldr	d1, [c2, w3, sxtw #3]
# CHECK: ldr	d1, [c2, x3, sxtx]
# CHECK: ldr	d1, [c2, x3, sxtx]
# CHECK: ldr	d1, [c2, x3, sxtx #3]
# CHECK: ldr	s1, [c2, w3, uxtw]
# CHECK: ldr	s1, [c2, w3, uxtw]
# CHECK: ldr	s1, [c2, w3, uxtw #2]
# CHECK: ldr	s1, [c2, x3]
# CHECK: ldr	s1, [c2, x3]
# CHECK: ldr	s1, [c2, x3, lsl #2]
# CHECK: ldr	s1, [c2, w3, sxtw]
# CHECK: ldr	s1, [c2, w3, sxtw]
# CHECK: ldr	s1, [c2, w3, sxtw #2]
# CHECK: ldr	s1, [c2, x3, sxtx]
# CHECK: ldr	s1, [c2, x3, sxtx]
# CHECK: ldr	s1, [c2, x3, sxtx #2]
# CHECK: str	d1, [c2, w3, uxtw]
# CHECK: str	d1, [c2, w3, uxtw]
# CHECK: str	d1, [c2, w3, uxtw #3]
# CHECK: str	d1, [c2, x3]
# CHECK: str	d1, [c2, x3]
# CHECK: str	d1, [c2, x3, lsl #3]
# CHECK: str	d1, [c2, w3, sxtw]
# CHECK: str	d1, [c2, w3, sxtw]
# CHECK: str	d1, [c2, w3, sxtw #3]
# CHECK: str	d1, [c2, x3, sxtx]
# CHECK: str	d1, [c2, x3, sxtx]
# CHECK: str	d1, [c2, x3, sxtx #3]
# CHECK: str	s1, [c2, w3, uxtw]
# CHECK: str	s1, [c2, w3, uxtw]
# CHECK: str	s1, [c2, w3, uxtw #2]
# CHECK: str	s1, [c2, x3]
# CHECK: str	s1, [c2, x3]
# CHECK: str	s1, [c2, x3, lsl #2]
# CHECK: str	s1, [c2, w3, sxtw]
# CHECK: str	s1, [c2, w3, sxtw]
# CHECK: str	s1, [c2, w3, sxtw #2]
# CHECK: str	s1, [c2, x3, sxtx]
# CHECK: str	s1, [c2, x3, sxtx]
# CHECK: str	s1, [c2, x3, sxtx #2]
